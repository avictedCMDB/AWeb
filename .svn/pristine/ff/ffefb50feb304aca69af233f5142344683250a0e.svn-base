package com.avic.supplier.controllers;

import java.util.List;
import java.util.Map;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

import com.avic.management.models.MarketAddress;
import com.avic.supplier.models.SupplierAddress;
import com.avic.supplier.services.SupplierAddressService;
import com.avic.supplier.utils.CodeConstants;

@Controller
@RequestMapping("/address")
public class SupplierAddressController {
    protected static final Log logger = LogFactory.getLog(SupplierAddressController.class);
    
    @Autowired
    SupplierAddressService supplierAddressService;
    /**
     * 页面初始化方法
     * @param map
     * @return
     */
    @RequestMapping("")
    public String index(Map<String, Object> map) {
        logger.info("供应商地址库管理信息");
        //TODO 供应商Id 取得不详
        String supId = "1";
        SupplierAddress supplierAddress = new SupplierAddress();
        supplierAddress.setSupId(supId);
        List<SupplierAddress> supplierAddressList = supplierAddressService.querySupplierAddressList(supplierAddress);
        map.put("supplierAddressList", supplierAddressList);
        return "address/supplier_address";
    }
    /**
     * 删除地址
     * @param map
     * @param supAddressId
     * @return
     */
    @RequestMapping("/delete/{supAddressId}")
    public String deleteAddress(Map<String, Object> map,@PathVariable("supAddressId")String supAddressId) {
        logger.info("删除地区");
        supplierAddressService.deleteSupplierAddress(supAddressId);
        return "redirect:/supplier/address";
    }
    /**
     * 设置为默认地址
     * @param map
     * @param addressID
     * @return
     */
    @RequestMapping("/setDefault/{addressID}")
    public String querySupplierAddress(Map<String, Object> map,@PathVariable("addressID")String addressID) {
    	logger.info("供应商地址库查看");
    	//TODO 供应商Id 取得不详
        String supId = "1";
    	SupplierAddress unDefParam =  new SupplierAddress();
    	// 清空已设置的默认地址
    	unDefParam.setIfDefault(CodeConstants.NO_DEFAULT);
    	unDefParam.setSupId(supId);
    	supplierAddressService.updateSupplierAddress(unDefParam);
    	//设置默认地址
    	SupplierAddress defParam =  new SupplierAddress();
    	defParam.setIfDefault(CodeConstants.IS_DEFAULT);
    	defParam.setSupAddressId(addressID);
    	supplierAddressService.updateSupplierAddress(defParam);
        return "redirect:/supplier/address";
    }
    /**
     * 迁移新增画面
     * @param map
     * @return
     */
    @RequestMapping("/insertPage")
    public String insertSupplierAddressPage(Map<String, Object> map) {
        logger.info("新增地区页面");
        map.put("processType", "insert");
        return "address/supplier_address_add";
    }
    /**
     * 迁移修改画面
     * @param map
     * @return
     */
    @RequestMapping("/updatePage/{addressID}")
    public String updateSupplierAddressPage(Map<String, Object> map,@PathVariable("addressID")String addressID) {
        logger.info("修改地区页面");
        map.put("processType", "update");
        SupplierAddress supplierAddress = supplierAddressService.querySupplierAddress(addressID);
        map.put("supplierAddress", supplierAddress);
        map.put("supAddressId", addressID);
        return "address/supplier_address_add";
    }
    /**
     * 新增地区保存
     * @param map
     * @param addressID
     * @return
     */
    @RequestMapping("/insert")
    public String insertSupplierAddress(@ModelAttribute("supplierAddress") SupplierAddress supplierAddress) {
        logger.info("新增地区保存");
        // 添加供应商
        //TODO 供应商Id 取得不详
        String supId = "1";
        supplierAddress.setSupId(supId);
        supplierAddressService.insertSupplierAddress(supplierAddress);
        return "redirect:/supplier/address";
    }
    /**
     * 修改地区保存
     * @param map
     * @param addressID
     * @return
     */
    @RequestMapping("/update")
    public String updateSupplierAddress(@ModelAttribute("supplierAddress") SupplierAddress supplierAddress) {
        logger.info("修改地区");
      //TODO 供应商Id 取得不详
        String supId = "1";
        if (CodeConstants.IS_DEFAULT.equals(supplierAddress.getIfDefault())) {
        	SupplierAddress unDefParam =  new SupplierAddress();
        	// 清空已设置的默认地址
        	unDefParam.setIfDefault(CodeConstants.NO_DEFAULT);
        	unDefParam.setSupId(supId);
        	supplierAddressService.updateSupplierAddress(unDefParam);
		}
        supplierAddressService.updateSupplierAddress(supplierAddress);
        return "redirect:/supplier/address";
    }
    /**
     * 返回方法
     * @param map
     * @param addressID
     * @return
     */
    @RequestMapping("/back")
    public String backSupplierAddress(Map<String, Object> map) {
        logger.info("返回地区");
        return "redirect:/supplier/address";
    }
    
}
