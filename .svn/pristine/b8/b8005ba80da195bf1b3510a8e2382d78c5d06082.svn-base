<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.avic.management.mappers.OrderMapper">
	<resultMap id="orderMap" type="com.avic.management.models.Order">
		<result column="SUP_ORDER_ID" property="sup_order_id" jdbcType="VARCHAR" />
		<result column="SUP_ID" property="sup_id" jdbcType="VARCHAR" />
		<result column="ADDR_PROV" property="addrProv" jdbcType="VARCHAR" />
		<result column="ADDR_CITY" property="addrCity" jdbcType="VARCHAR" />
		<result column="ADDR_DIST" property="addrDist" jdbcType="VARCHAR" />
		<result column="ADDR_TOWN" property="addrTown" jdbcType="VARCHAR" />
		<result column="ADDR_DETAIL" property="addrDetail" jdbcType="VARCHAR" />
		<result column="ADDR_NAME" property="addrName" jdbcType="VARCHAR" />
		<result column="ADDR_ZIP" property="addrZip" jdbcType="VARCHAR" />
		<result column="ADDR_PHONE" property="addrPhone" jdbcType="VARCHAR" />
		<result column="ADDR_TEL" property="addrTel" jdbcType="VARCHAR" />
		<result column="ADDR_EMAIL" property="addrEmail" jdbcType="VARCHAR" />
		<result column="SUP_GOODS_ID" property="supGoodsID" jdbcType="VARCHAR" />
		<result column="SUP_GOODS_ID" property="sup_goods_id" jdbcType="VARCHAR" />
		<result column="ORDER_ID" property="order_id" jdbcType="VARCHAR" />
		<result column="COMPARE_ID" property="compareId" jdbcType="VARCHAR" />
		
	</resultMap>
		<resultMap id="orderByIdMap" type="com.avic.management.models.Order">
		<result column="SUP_ORDER_ID" property="sup_order_id" jdbcType="VARCHAR" />
		<result column="SUP_ID" property="sup_id" jdbcType="VARCHAR" />
		<result column="SUP_NAME" property="sup_name" jdbcType="VARCHAR" />
		<result column="ADDR_PROV" property="addrProv" jdbcType="VARCHAR" />
		<result column="ADDR_CITY" property="addrCity" jdbcType="VARCHAR" />
		<result column="ADDR_DIST" property="addrDist" jdbcType="VARCHAR" />
		<result column="ADDR_TOWN" property="addrTown" jdbcType="VARCHAR" />
		<result column="ADDR_DETAIL" property="addrDetail" jdbcType="VARCHAR" />
		<result column="ADDR_NAME" property="addrName" jdbcType="VARCHAR" />
		<result column="ADDR_ZIP" property="addrZip" jdbcType="VARCHAR" />
		<result column="ADDR_PHONE" property="addrPhone" jdbcType="VARCHAR" />
		<result column="ADDR_TEL" property="addrTel" jdbcType="VARCHAR" />
		<result column="ADDR_EMAIL" property="addrEmail" jdbcType="VARCHAR" />
		<result column="SUP_GOODS_ID" property="supGoodsID" jdbcType="VARCHAR" />
		<result column="SUP_GOODS_ID" property="sup_goods_id" jdbcType="VARCHAR" />
		<result column="ORDER_ID" property="order_id" jdbcType="VARCHAR" />
		<result column="ADDR_ALL" property="addrAll" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="snapshotResultMap" type="com.avic.management.models.OrderSnapshot">
		<id column="order_id" property="orderId" jdbcType="VARCHAR" /> 
		<id column="sup_goods_id" property="supGoodsId" jdbcType="VARCHAR" />
		<id column="sup_id" property="supId" jdbcType="INTEGER" />
		<result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
		<result column="image_path" property="imagePath" jdbcType="VARCHAR" />
		<result column="goods_price" property="goodsPrice" jdbcType="DOUBLE" />
		<result column="buy_num" property="buyNum" jdbcType="INTEGER" />
		<result column="refund_status" property="refundStatus" jdbcType="INTEGER" />
		<result column="sup_type" property="supType" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="quoteSnapshotMap" type="com.avic.management.models.QuoteSnapshot">
		<id column="ORDER_ID" property="orderId" jdbcType="VARCHAR" /> 
		<id column="GOODS_NAME" property="goodsName" jdbcType="VARCHAR" />
		<id column="GOODS_PRICE" property="goodsPrice" jdbcType="VARCHAR" />
		<result column="BUY_NUM" property="buyNum" jdbcType="VARCHAR" />
		<result column="GOODS_MODEL" property="goodsModel" jdbcType="VARCHAR" />
		<result column="BRAND_NAME" property="brandName" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="orderContractResultMap" type="com.avic.management.models.OrderContract">
		<result column="contract_code" property="contract_code" jdbcType="VARCHAR" /> 
		<result column="order_id" property="order_id" jdbcType="VARCHAR" /> 
		<result column="contract_name" property="contract_name" jdbcType="VARCHAR" /> 
		<result column="sup_name" property="sup_name" jdbcType="VARCHAR" /> 
		<result column="sign_date" property="sign_date" jdbcType="VARCHAR" /> 
		<result column="contract_price" property="contract_price" jdbcType="VARCHAR" /> 
		<result column="buy_type" property="buy_type" jdbcType="VARCHAR" /> 
		<result column="contract_attachment_path" property="contract_attachment_path" jdbcType="VARCHAR" /> 
		<result column="create_date" property="create_date" jdbcType="VARCHAR" /> 
		<result column="remark" property="remark" jdbcType="VARCHAR" /> 
		<result column="a_param" property="a_param" jdbcType="VARCHAR" /> 
		<result column="b_param " property="b_param" jdbcType="VARCHAR" /> 
		<result column="user_id" property="user_id" jdbcType="VARCHAR" /> 
	</resultMap>
	
	<select id="queryOrders" parameterType="com.avic.management.models.Order" resultMap="orderMap">
	SELECT T99.*,Y.COMPARE_ID FROM (
		SELECT T1.ORDER_ID,T1.SUP_ID,TO_CHAR(T1.ORDER_TIME,'YYYY-mm-dd') ORDER_TIME,T1.ORDER_STATUS, 
		DECODE(U.COMPANYID,#{companyID,jdbcType=VARCHAR},T1.ORDER_AMOUNT_INIT,T1.ORDER_AMOUNT) ORDER_AMOUNT,T1.INVOICE_STATUS,
		T2.SUP_NAME,T4.GOODS_URL,T3.GOODS_NAME,T3.SUP_GOODS_ID,T3.IMAGE_PATH,
		DECODE(U.COMPANYID,#{companyID,jdbcType=VARCHAR},T3.Goods_Price_Init,T3.GOODS_PRICE) AS GOODS_PRICE,
		T3.BUY_NUM,
		(DECODE(U.COMPANYID,#{companyID,jdbcType=VARCHAR},T3.Goods_Price_Init,T3.GOODS_PRICE)*T3.BUY_NUM) TOTALPRICE,T3.REFUND_STATUS,T5.CODETEXT ORDER_STATUS_NAME,T8.ROWSPAN,
		T10.ENUM,T12.RNUM,T1.EXPRESS_NAME,T1.EXPRESS_CODE,T1.SUP_ORDER_ID,T3.GOODS_MODEL,
		(CASE WHEN T2.IF_VALID=1 THEN T2.SUP_TYPE ELSE 1 END) SUP_TYPE,SUP_EXPRESS_NAME,SUP_EXPRESS_CODE,
		<![CDATA[ (CASE WHEN T1.PAY_TIME+15<SYSDATE THEN 0 ELSE 1 END) ISSHOWTHHBTN ]]> 
		FROM T_ORDER T1 
		LEFT OUTER JOIN T_SUP_INFO T2 ON T1.SUP_ID=T2.SUP_ID 
		LEFT OUTER JOIN USERS U ON T1.USER_ID = U.USERID
		LEFT OUTER JOIN T_ORDER_SNAPSHOT T3 ON T1.ORDER_ID=T3.ORDER_ID AND T1.SUP_ID=T3.SUP_ID 
		LEFT OUTER JOIN T_SUP_GOODS T4 ON T3.SUP_ID=T4.SUP_ID AND T3.SUP_GOODS_ID=T4.SUP_GOODS_ID 
		LEFT OUTER JOIN CODELIST T5 ON T1.ORDER_STATUS = T5.CODEVALUE AND T5.CODELISTTYPE='ORDER_STATUS'
		LEFT OUTER JOIN (
		SELECT T6.ORDER_ID,COUNT(T7.SUP_GOODS_ID) ROWSPAN FROM T_ORDER T6
		LEFT OUTER JOIN T_ORDER_SNAPSHOT T7 ON T6.ORDER_ID=T7.ORDER_ID AND T6.SUP_ID=T7.SUP_ID
		WHERE T6.USER_ID=#{user_id,jdbcType=INTEGER}
		GROUP BY T6.ORDER_ID
		) T8 ON T1.ORDER_ID=T8.ORDER_ID 
		LEFT OUTER JOIN (
			SELECT T9.ORDER_ID,COUNT(T9.EXCHANGE_ID) ENUM FROM T_ORDER_EXCHANGE T9 
			WHERE T9.EXCHANGE_STATUS!=7 
			GROUP BY T9.ORDER_ID 
		) T10 ON T1.ORDER_ID=T10.ORDER_ID 
		LEFT OUTER JOIN (
			SELECT T11.ORDER_ID,COUNT(T11.REFOUND_ID) RNUM FROM T_ORDER_REFOUND T11 
			WHERE T11.REFOUND_STATUS!=6 
			GROUP BY T11.ORDER_ID 
		) T12 ON T1.ORDER_ID=T12.ORDER_ID 
		WHERE 1=1 
		ORDER BY T1.ORDER_TIME DESC,T1.ORDER_ID DESC 
	) T99 , T_PRODUCT_COMPARE_INFO Y
	WHERE T99.ORDER_ID IN (
		SELECT ORDER_ID FROM(
	        SELECT ROWNUM RN,ORDER_ID FROM (
	            SELECT DISTINCT T1.ORDER_ID,T1.ORDER_TIME FROM T_ORDER T1 
	            LEFT OUTER JOIN T_SUP_INFO T2 ON T1.SUP_ID=T2.SUP_ID 
	            LEFT OUTER JOIN T_ORDER_SNAPSHOT T3 ON T1.ORDER_ID=T3.ORDER_ID AND T1.SUP_ID=T3.SUP_ID 
	            WHERE 1=1   
	            <if test="sup_name != null and sup_name != ''">
				<![CDATA[ AND T2.SUP_NAME LIKE '%' || #{sup_name} || '%' ]]>
				</if>
				<if test="order_id != null and order_id != ''">
				<![CDATA[ AND T1.ORDER_ID LIKE '%' || #{order_id} || '%' ]]>
				</if>
				<if test="goods_name != null and goods_name != ''">
				<![CDATA[ AND T3.GOODS_NAME LIKE '%' || #{goods_name} || '%' ]]>
				</if>
				<if test="supType != null and supType != ''">
				<![CDATA[ AND T2.SUP_TYPE = #{supType} ]]>
				</if>
				 <if test="startTime != null and startTime != ''">
				  AND TO_CHAR(T1.ORDER_TIME,'yyyy-MM-dd') &gt;= #{startTime,jdbcType=VARCHAR}
				</if>
				<if test="endTime != null and endTime != ''">
				  AND TO_CHAR(T1.ORDER_TIME, 'yyyy-MM-dd') &lt;= #{endTime,jdbcType=VARCHAR}
				</if>
				
				<!-- <if test="order_time != null and order_time != '' and order_time!='99'">
					<choose>
						<when test="order_time == '0'"><![CDATA[ AND T1.ORDER_TIME < ADD_MONTHS(SYSDATE,1) ]]> </when> 
						<when test="order_time == '1'"><![CDATA[ AND T1.ORDER_TIME < ADD_MONTHS(SYSDATE,3) ]]> </when> 
						<otherwise><![CDATA[ AND T1.ORDER_TIME < ADD_MONTHS(SYSDATE,12) ]]> </otherwise> 
					</choose> 
				</if> -->
				<if test="order_status != null and order_status != '' and order_status != '99'">
				AND T1.ORDER_STATUS = #{order_status,jdbcType=VARCHAR}
				</if>
				AND T1.USER_ID = #{user_id,jdbcType=INTEGER} 
	            ORDER BY T1.ORDER_TIME DESC
	        )
	    ) A1 WHERE <![CDATA[ A1.RN >= #{pageFrom,jdbcType=INTEGER} AND A1.RN <= #{pageTo,jdbcType=INTEGER} ]]> 
	) 
	AND T99.ORDER_ID = Y.ORDER_ID(+)
	</select>
	
	<select id="queryOrdersAllData" parameterType="com.avic.management.models.Order" resultMap="orderMap">
	SELECT * FROM (
        SELECT T1.ORDER_ID,
               T1.SUP_ID,
               T2.SUP_NAME,
               decode(t2.sup_type,
                      1,
                      TOS.goods_name || '(' || TOS.goods_model || ')',
                      TOS.goods_name) goods_name,
        DECODE(U.COMPANYID,#{companyID,jdbcType=VARCHAR},TOS.Goods_Price_Init, TOS.GOODS_PRICE) AS GOODS_PRICE,
               TOS.buy_num,
               DECODE(U.COMPANYID,#{companyID,jdbcType=VARCHAR},T1.ORDER_AMOUNT_INIT, T1.ORDER_AMOUNT) ORDER_AMOUNT,
               T1.INVOICE_STATUS,
               TO_CHAR(T1.ORDER_TIME, 'YYYY-mm-dd') ORDER_TIME,
               t4.codetext ORDER_STATUS_NAME
       FROM T_ORDER T1
          LEFT OUTER JOIN T_SUP_INFO T2
            ON T1.SUP_ID = T2.SUP_ID
          LEFT OUTER JOIN USERS U
            ON T1.USER_ID = U.USERID
          LEFT OUTER JOIN T_ORDER_SNAPSHOT TOS
            ON T1.ORDER_ID = TOS.ORDER_ID
          LEFT OUTER JOIN codelist T4
            on t4.codevalue = t1.order_status
         where t4.codelisttype = 'ORDER_STATUS'
         ORDER BY T1.ORDER_TIME DESC, T1.ORDER_ID DESC) T99
    WHERE T99.ORDER_ID IN (
        SELECT ORDER_ID FROM (
            SELECT DISTINCT T1.ORDER_ID,T1.ORDER_TIME FROM T_ORDER T1 
            LEFT OUTER JOIN T_SUP_INFO T2 ON T1.SUP_ID=T2.SUP_ID 
            LEFT OUTER JOIN T_ORDER_SNAPSHOT T3 ON T1.ORDER_ID=T3.ORDER_ID AND T1.SUP_ID=T3.SUP_ID 
            WHERE 1=1   
            <if test="sup_name != null and sup_name != ''">
            <![CDATA[ AND T2.SUP_NAME LIKE '%' || #{sup_name} || '%' ]]>
            </if>
            <if test="supType != null and supType != ''">
				<![CDATA[ AND T2.SUP_TYPE = #{supType} ]]>
				</if>
            <if test="order_id != null and order_id != ''">
            <![CDATA[ AND T1.ORDER_ID LIKE '%' || #{order_id} || '%' ]]>
            </if>
            <if test="goods_name != null and goods_name != ''">
            <![CDATA[ AND T3.GOODS_NAME LIKE '%' || #{goods_name} || '%' ]]>
            </if>
            <if test="startTime != null and startTime != ''">
				  AND TO_CHAR(T1.ORDER_TIME,'yyyy-MM-dd') &gt;= #{startTime,jdbcType=VARCHAR}
				</if>
				<if test="endTime != null and endTime != ''">
				  AND TO_CHAR(T1.ORDER_TIME, 'yyyy-MM-dd') &lt;= #{endTime,jdbcType=VARCHAR}
				</if>
            <!-- <if test="order_time != null and order_time != '' and order_time!='99'">
                <choose>
                    <when test="order_time == '0'"><![CDATA[ AND T1.ORDER_TIME < ADD_MONTHS(SYSDATE,1) ]]> </when> 
                    <when test="order_time == '1'"><![CDATA[ AND T1.ORDER_TIME < ADD_MONTHS(SYSDATE,3) ]]> </when> 
                    <otherwise><![CDATA[ AND T1.ORDER_TIME < ADD_MONTHS(SYSDATE,12) ]]> </otherwise> 
                </choose> 
            </if> -->
            <if test="order_status != null and order_status != '' and order_status != '99'">
            AND T1.ORDER_STATUS = #{order_status,jdbcType=VARCHAR}
            </if>
            AND T1.USER_ID = #{user_id,jdbcType=INTEGER} 
        )
    )
	</select>
	
	
	<select id="queryOrdersListCount" parameterType="com.avic.management.models.Order" resultType="java.lang.Integer">
        SELECT COUNT(ORDER_ID) TOTAL FROM (
            SELECT DISTINCT T1.ORDER_ID,T1.ORDER_TIME FROM T_ORDER T1 
            LEFT OUTER JOIN T_SUP_INFO T2 ON T1.SUP_ID=T2.SUP_ID 
            LEFT OUTER JOIN T_ORDER_SNAPSHOT T3 ON T1.ORDER_ID=T3.ORDER_ID AND T1.SUP_ID=T3.SUP_ID 
            WHERE 1=1   
            <if test="sup_name != null and sup_name != ''">
			<![CDATA[ AND T2.SUP_NAME LIKE '%' || #{sup_name} || '%' ]]>
			</if>
			<if test="supType != null and supType != ''">
				<![CDATA[ AND T2.SUP_TYPE = #{supType} ]]>
				</if>
			<if test="order_id != null and order_id != ''">
			<![CDATA[ AND T1.ORDER_ID LIKE '%' || #{order_id} || '%' ]]>
			</if>
			<if test="goods_name != null and goods_name != ''">
			<![CDATA[ AND T3.GOODS_NAME LIKE '%' || #{goods_name} || '%' ]]>
			</if>
			<if test="startTime != null and startTime != ''">
				  AND TO_CHAR(T1.ORDER_TIME,'yyyy-MM-dd') &gt;= #{startTime,jdbcType=VARCHAR}
				</if>
				<if test="endTime != null and endTime != ''">
				  AND TO_CHAR(T1.ORDER_TIME, 'yyyy-MM-dd') &lt;= #{endTime,jdbcType=VARCHAR}
				</if>
			<!-- <if test="order_time != null and order_time != '' and order_time!='99'">
				<choose>
					<when test="order_time == '0'"><![CDATA[ AND T1.ORDER_TIME < ADD_MONTHS(SYSDATE,1) ]]> </when> 
					<when test="order_time == '1'"><![CDATA[ AND T1.ORDER_TIME < ADD_MONTHS(SYSDATE,3) ]]> </when> 
					<otherwise><![CDATA[ AND T1.ORDER_TIME < ADD_MONTHS(SYSDATE,12) ]]> </otherwise> 
				</choose> 
			</if> -->
			<if test="order_status != null and order_status != '' and order_status != '99'">
			AND T1.ORDER_STATUS = #{order_status,jdbcType=VARCHAR}
			</if>
			AND T1.USER_ID = #{user_id,jdbcType=INTEGER} 
        )
	</select>
	
	<select id="getOrderStatusList" resultMap="orderMap">
	SELECT T1.CODETEXT STATUSNAME,T1.CODEVALUE STATUSVALUE FROM CODELIST T1
	WHERE T1.CODELISTTYPE='ORDER_STATUS'
	ORDER BY (T1.CODEVALUE+0)
	</select>
	
	<update id="doReceived">
		UPDATE T_ORDER SET ORDER_STATUS =14 WHERE ORDER_ID = #{order_id,jdbcType=VARCHAR}
	</update>
	
	<update id="orderCancel">
	UPDATE T_ORDER T1 
	SET T1.ORDER_STATUS=17 
	WHERE T1.ORDER_ID=#{order_id,jdbcType=VARCHAR} 
	</update>
	
	<delete id="deleteT_ORDER">
	DELETE FROM T_ORDER T1 
	WHERE T1.ORDER_ID=#{order_id,jdbcType=VARCHAR} 
	</delete>
	
	<delete id="deleteT_ORDER_SNAPSHOT">
	DELETE FROM T_ORDER_SNAPSHOT T1 
	WHERE T1.ORDER_ID=#{order_id,jdbcType=VARCHAR} 
	</delete>


	
	<select id="queryPaymentOrderCount" resultType="java.lang.Integer">	
		select count(1) 
		  from t_order a 
		 where companyid = #{companyId} 
		<if test="orderStatus == 0">
		   and order_status in (2, 15)
		</if>
		<if test="orderStatus > 0">
		   and order_status = #{orderStatus} 
		</if>
		<if test="supId > 0">
		   and sup_id = #{supId}
		</if> 
		<if test="orderId != null and orderId != ''">
		   and order_id like '%'||#{orderId}||'%'
		</if>
		<if test="goodsName != null and goodsName != ''">
		   and exists (
		   	   select 1 
		   	     from t_order_snapshot b 
		   	    where a.order_id = b.order_id 
		   	      and b.goods_name like '%'||#{goodsName}||'%'
		   	   )
		 </if>
	</select>
	<select id="queryPaymentOrderList" resultMap="orderMap">	
		select * from (
			select row_number() over (order by order_time desc) rn, order_id, sup_id, order_amount, to_char(order_time,'YYYY-mm-dd') order_time, order_status
			  from t_order a 
			 where companyid = #{companyId} 
			<if test="orderStatus == 0">
			   and order_status in (2, 15)
			</if>
			<if test="orderStatus > 0">
			   and order_status = #{orderStatus} 
			</if>
			<if test="supId > 0">
			   and sup_id = #{supId}
			</if> 
			<if test="orderId != null and orderId != ''">
			   and order_id like '%'||#{orderId}||'%'
			</if>
			<if test="goodsName != null and goodsName != ''">
			   and exists (
			   	   select 1 
			   	     from t_order_snapshot b 
			   	    where a.order_id = b.order_id 
			   	      and b.goods_name like '%'||#{goodsName}||'%'
			   	   )
			 </if>
		) x 
		where x.rn between #{start} and #{end}
	</select>
	<select id="queryPaymentOrderSnapshot" resultMap="snapshotResultMap">	
		select a.*, b.sup_type from t_order_snapshot a, t_sup_info b where a.sup_id = b.sup_id and order_id in 
		 <foreach close=")" collection="list" item="item" index="index" open="(" separator=","> 
			#{item}
		 </foreach>
		order by order_id
	</select>
	
	<select id="queryOrderById" resultMap="orderByIdMap">
		select a.*, b.sup_type,b.sup_name from t_order a, t_sup_info b where a.sup_id = b.sup_id and order_id = #{orderId}
	</select>
	<update id="updateOrderPayStatus">
		update t_order set pay_time = sysdate, order_status = 2 where order_id = #{orderId}
	</update>
	<update id="updateOrderStatus">
		update t_order set order_status = #{status} where order_id = #{orderId}
	</update>
	
	<select id="queryGoodsSum" resultType="java.lang.Integer">
		select sum(buy_num) from t_order_snapshot where order_id = #{orderId}
	</select>
	
	<select id="queryUserCompanyName" resultType="java.lang.String">
		select companyname from users where userid = #{userId}
	</select>
	<select id="queryUserContactNum" resultType="java.lang.String">
		select contact_num from users where userid = #{userId}
	</select>
	
	<!-- 查询报价单商品列表 -->
	<select id="queryQuoteSnapshot" resultMap="quoteSnapshotMap" parameterType="com.avic.management.models.QuoteSnapshot">
		SELECT TOS.ORDER_ID,
		       TOS.GOODS_NAME,
		       TOS.GOODS_PRICE,
		       TOS.BUY_NUM,
		       TOS.GOODS_MODEL,
		       TSG.BRAND_NAME
		  FROM T_ORDER_SNAPSHOT TOS
	 LEFT JOIN T_SUP_GOODS TSG
		    ON (TOS.SUP_GOODS_ID = TSG.SUP_GOODS_ID)
		  WHERE TOS.ORDER_ID = #{orderId,jdbcType=VARCHAR}
  </select>
  
  <!-- 查询报价单商品列表 -->
	<select id="queryOrderInfoByOrderId" resultMap="orderMap" parameterType="com.avic.management.models.Order">
		    SELECT T.SUP_ORDER_ID,
		           T.SUP_ID,
		           T.ADDR_PROV,
		           T.ADDR_CITY,
		           T.ADDR_DIST,
		           T.ADDR_TOWN,
		           T.ADDR_DETAIL,
		           T.ADDR_NAME,
		           T.ADDR_ZIP,
		           T.ADDR_PHONE,
		           T.ADDR_TEL,
		           T.ADDR_EMAIL
		      FROM T_ORDER T
		     WHERE T.ORDER_ID =  #{order_id,jdbcType=VARCHAR}
  </select>
  <insert id="insertContract">
  	insert into T_ORDER_CONTRACT
		  (CONTRACT_CODE,
		   ORDER_ID,
		   CONTRACT_NAME,
		   SUP_NAME,
		   SIGN_DATE,
		   CONTRACT_PRICE,
		   CREATE_DATE,
		   A_PARAM,
		   USER_ID)
		values
		  (#{contract_code,jdbcType=VARCHAR},
		   #{order_id,jdbcType=VARCHAR},
		   #{contract_name,jdbcType=VARCHAR},
		   #{sup_name,jdbcType=VARCHAR},
		   sysdate,
		   #{contract_price,jdbcType=VARCHAR},
		   sysdate,
		   #{a_param,jdbcType=VARCHAR},
		   #{user_id,jdbcType=VARCHAR}
		  )
  </insert>
  <update id="updateContract">
  	update T_ORDER_CONTRACT set REMARK = #{remark,jdbcType=VARCHAR} where CONTRACT_CODE = #{contract_code,jdbcType=VARCHAR}
  </update>
  <select id="queryOrderContract" resultMap="orderContractResultMap">
		select contract_code,
		       order_id,
		       contract_name,
		       sup_name,
		       sign_date,
		       contract_price,
		       buy_type,
		       contract_attachment_path,
		       create_date,
		       remark,
		       a_param,
		       b_param,
		       user_id
		  from t_order_contract
		  where order_id = #{orderId}
	</select>
</mapper>