package com.avic.management.controllers;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;

import com.avic.common.constants.UserRole;
import com.avic.common.exceptions.NoPermissionException;
import com.avic.common.exceptions.UserNotLoginException;
import com.avic.common.utils.Permission;
import com.avic.management.models.EnterpriseSupMapping;
import com.avic.management.services.ManagementPartnerService;
import com.avic.passport.models.User;

@Controller
@RequestMapping("/partner")
@Transactional
public class ManagementPartnerController {
	
	static final int PAGE_SIZE = 10; //每页显示多少条
	
	protected static final Log logger = LogFactory.getLog(ManagementPartnerController.class);
	
	@Autowired
	ManagementPartnerService managementPartnerService;

	
	 @RequestMapping("")
	    public String index(@ModelAttribute("enterpriseSupMapping") EnterpriseSupMapping enterpriseSupMapping,HttpServletRequest req,Map<String, Object> map,HttpSession httpSession) {
	        logger.info("查询换货单列表");
	        User user = new User();
	        try {
	        	user = Permission.check(httpSession, UserRole.BUY,UserRole.CLIENT);
			} catch (UserNotLoginException e) {
				return "redirect:/passport/login";
			} catch (NoPermissionException e){
				return "redirect:/passport/login";
			}
			
			String page = req.getParameter("page");
			
			int pageNum = 1;
			 
	        if (StringUtils.isNumeric(page)) {
	            pageNum = Integer.parseInt(page);
	        }
	        
//	        enterpriseSupMapping.setUserID(user.getUserId());
	        
	       //查询数量
	        int total = managementPartnerService.queryEnterpriseSupMappingCount(enterpriseSupMapping);

	        int pages = (int) Math.ceil((double) total / PAGE_SIZE);
	        
	        if (pageNum > pages) {
	            pageNum = pages;
	        }
	        
			
	        enterpriseSupMapping.setPage(pageNum);
	        enterpriseSupMapping.setPageSize(PAGE_SIZE);
			List<EnterpriseSupMapping> enterpriseSupMappingList = managementPartnerService.queryEnterpriseSupMappingList(enterpriseSupMapping);
	        map.put("enterpriseSupMappingList", enterpriseSupMappingList);
	        map.put("enterpriseSupMapping", enterpriseSupMapping);
	        map.put("page", pageNum);
	        map.put("total", total);
	        map.put("pages", pages);
//	        map.put("pageAction","management/exchange?startTime=" + (exchange.getStartTime()==null?"":exchange.getStartTime()) 
//					+ "&endTime=" + (exchange.getEndTime()==null?"":exchange.getEndTime()) 
//					+ "&searchExchangeID=" + URLEncoder.encode(exchange.getSearchExchangeID()==null?"":exchange.getSearchExchangeID(), "GBK")
//                    + "&searchSupName=" + URLEncoder.encode(exchange.getSearchSupName()==null?"":exchange.getSearchSupName(), "GBK")
//                    + "&searchOrderID=" + URLEncoder.encode(exchange.getSearchOrderID()==null?"":exchange.getSearchOrderID(), "GBK")
//                    + "&searchExchangeStatus=" + URLEncoder.encode(exchange.getSearchExchangeStatus()==null?"":exchange.getSearchExchangeStatus(), "GBK")+ "&page=%PAGE%");

	        return "management_partner";
	    }
}
