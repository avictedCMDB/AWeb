package com.avic.market.controllers;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.avic.market.services.GoodsService;

@Controller
@RequestMapping("/goods")
public class GoodsController {
    protected static final Log logger = LogFactory.getLog(GoodsController.class);
    
    private static final int PAGE_SIZE = 12;
    
    @Autowired
    GoodsService goodsService;
    
    @RequestMapping("/search")
    public String search(HttpServletRequest req, Map<String, Object> map) {
        // 关键字
        String q = req.getParameter("q");
        // 分类
        String cat = req.getParameter("cat");
        // 品牌
        String brand = req.getParameter("brand");
        // 价格
        String price = req.getParameter("price");
        // 页码
        String page = req.getParameter("p");
        // 排序
        String o = req.getParameter("o");
        // 大小图
        String view = req.getParameter("view");

        logger.info("商品搜索Controller-q["+q+"], cat["+cat+"], brand["+brand+"], price["+price+"], p["+page+"], o["+o+"]");

        int catId = 0;
        
        if (StringUtils.isNumeric(cat)) {
            catId = Integer.parseInt(cat);
        }
        
        int pageNum = 1;
        
        if (StringUtils.isNumeric(page)) {
            pageNum = Integer.parseInt(page);
        }
        
        if (brand == null) {
            brand = "";
        }
        
        if (q == null) {
            q = "";
        }
        
        int order = 0;
        
        if (StringUtils.isNumeric(o)) {
            order = Integer.parseInt(o);
        }
        
        int priceStart = 0, priceEnd = 0;
        
        if (!StringUtils.isEmpty(price) && price.contains(",")) {
            String[] sep = price.split(",", 2);
            if (StringUtils.isNumeric(sep[0])) {
                priceStart = Integer.parseInt(sep[0]);
            }

            if (StringUtils.isNumeric(sep[1])) {
                priceEnd = Integer.parseInt(sep[1]);
            }
        }
        
        int total = goodsService.getGoodsCount(catId, brand, q, priceStart, priceEnd);
        
        int pages = (int)Math.ceil(total / PAGE_SIZE);
        
        if (pageNum > pages) {
            pageNum = pages;
        }
        if (total > 0) {
            map.put("list", goodsService.searchGoods(catId, brand, q, priceStart, priceEnd, order, pageNum, PAGE_SIZE));
        }
        
        if (!"list".equals(view)) {
            view = "pic";
        }
        
        map.put("searchBrand", brand);
        map.put("cat", catId);
        int cat1 = 0, cat2 = 0, cat3 = 0;
        if (catId < 100) {
            cat1 = catId;
        } else if (catId < 10000) {
            cat1 = catId / 100;
            cat2 = catId;
        } else {
            cat1 = catId / 10000;
            cat2 = catId / 100;
            cat3 = catId;
        }
        map.put("cat1", cat1);
        map.put("cat2", cat2);
        map.put("cat3", cat3);
        map.put("brandList", goodsService.getGoodsBrand(catId, q));
        map.put("price", priceStart + "," + priceEnd);
        map.put("total", total);
        map.put("order", order);
        map.put("view", view);
        map.put("page", pageNum);
        try {
            map.put("pageAction", "market/goods/search?cat=" + catId + "&brand=" + URLEncoder.encode(brand, "GBK") + "&q=" + URLEncoder.encode(q, "GBK") + "&price=" + priceStart + "," + priceEnd + "&o=" + order + "&view=" + view + "&p=%PAGE%");
        } catch (UnsupportedEncodingException e) {
        }
        
        map.put("pages", pages);
        map.put("searchKeyword", q);
        
        return "goods/list";
    }
}
