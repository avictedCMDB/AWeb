package com.avic.management.controllers;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

import com.avic.common.constants.UserRole;
import com.avic.common.exceptions.NoPermissionException;
import com.avic.common.exceptions.UserNotLoginException;
import com.avic.common.utils.Permission;
import com.avic.management.models.Invoice;
import com.avic.management.services.CommonService;
import com.avic.management.services.InvoiceService;
import com.avic.passport.models.User;

@Controller
@RequestMapping("/invoice")
@Transactional
public class InvoiceController {
    protected static final Log logger = LogFactory.getLog(InvoiceController.class);
    
    @Autowired
    InvoiceService invoiceService;
    @Autowired
    CommonService commonService;
    
    static final int PAGE_SIZE = 10; //每页显示多少条
    
    @RequestMapping("")
    public String index(HttpServletRequest req,Map<String, Object> map,HttpSession httpSession) {
        logger.info("发票管理");
        logger.info("添加选购商品到购物车");
        User user = new User();
        try {
        	user = Permission.check(httpSession, UserRole.BUY,UserRole.CLIENT);
		} catch (UserNotLoginException e) {
			return "redirect:/passport/login";
		} catch (NoPermissionException e){
			return "redirect:/passport/login";
		}
		String page = req.getParameter("page");
		
		int pageNum = 1;
		 
        if (StringUtils.isNumeric(page)) {
            pageNum = Integer.parseInt(page);
        }
        Invoice invoice = new Invoice();
		invoice.setUserID(user.getUserId());
        //查询数量
        int total = invoiceService.queryInvoiceCount(invoice);

        int pages = (int) Math.ceil((double) total / PAGE_SIZE);
        
        if (pageNum > pages) {
            pageNum = pages;
        }
        
        List<Invoice> invoices = new ArrayList<Invoice>();
       
        invoice.setPage(pageNum);
        invoice.setPageSize(PAGE_SIZE);
        invoices = invoiceService.queryInvoices(invoice);
        
        map.put("pageAction","management/invoice?page=%PAGE%");
        map.put("invoices", invoices);
        map.put("page", pageNum);
        map.put("total", total);
        map.put("pages", pages);
        return "management_invoice";
    }
    
    @RequestMapping("/addInvoicePage")
    public String showAddInvoicePage() {
        logger.info("跳转添加发票信息页面");
        return "management_invoice_add";
    }
    
    @RequestMapping("/udpateInvoicePage/{invoiceID}")
    public String showUpdateInvoicePage(Map<String, Object> map,@PathVariable("invoiceID")String invoiceID,HttpSession httpSession) {
        logger.info("跳转修改发票信息页面");
        User user = new User();
        try {
        	user = Permission.check(httpSession, UserRole.BUY,UserRole.CLIENT);
		} catch (UserNotLoginException e) {
			return "redirect:/passport/login";
		} catch (NoPermissionException e){
			return "redirect:/passport/login";
		}
        Invoice invoice = new Invoice();
        invoice.setInvoiceID(invoiceID);
        invoice = invoiceService.queryInvoiceByInvoiceID(invoice);
        map.put("invoice", invoice);
        return "management_invoice_add";
    }
    
    @RequestMapping("/add")
    public String addInvoice(@ModelAttribute("invoice") Invoice invoice,HttpSession httpSession) {
        logger.info("添加发票信息");
        User user = new User();
        try {
        	user = Permission.check(httpSession, UserRole.BUY,UserRole.CLIENT);
		} catch (UserNotLoginException e) {
			return "redirect:/passport/login";
		} catch (NoPermissionException e){
			return "redirect:/passport/login";
		}
        String invoiceID = commonService.queryIndex();
        //从session获取userid
        /*if(user == null){
        	return "redirect:/market/passport/login";
        }*/
    	String userID = user.getUserId();
        invoice.setInvoiceID(invoiceID);
        invoice.setUserID(userID);
        invoiceService.addInvoice(invoice);
        if("1".equals(invoice.getIfDefault())){
        	Invoice in = new Invoice();
        	in.setInvoiceID(invoiceID);
    		invoiceService.setOtherDefault(in);
    	}
        return "redirect:/management/invoice";
    }
    @RequestMapping("/update")
    public String updateInvoice(@ModelAttribute("invoice") Invoice invoice,HttpSession httpSession) {
        logger.info("修改发票信息");
        User user = new User();
        try {
        	user = Permission.check(httpSession, UserRole.BUY,UserRole.CLIENT);
		} catch (UserNotLoginException e) {
			return "redirect:/passport/login";
		} catch (NoPermissionException e){
			return "redirect:/passport/login";
		}
        invoiceService.updateInvoice(invoice);
        if("1".equals(invoice.getIfDefault())){
        	Invoice in = new Invoice();
        	in.setInvoiceID(invoice.getInvoiceID());
    		invoiceService.setOtherDefault(in);
    	}
        return "redirect:/management/invoice";
    }
    @RequestMapping("/delete/{invoiceID}")
    public String deleteAddress(Map<String, Object> map,@PathVariable("invoiceID")String invoiceID,HttpSession httpSession) {
        logger.info("删除发票信息");
        User user = new User();
        try {
        	user = Permission.check(httpSession, UserRole.BUY,UserRole.CLIENT);
		} catch (UserNotLoginException e) {
			return "redirect:/passport/login";
		} catch (NoPermissionException e){
			return "redirect:/passport/login";
		}
        Invoice invoice = new Invoice();
        invoice.setInvoiceID(invoiceID);
        invoiceService.deleteInvoice(invoice);
        return "redirect:/management/invoice";
    }
    
    @RequestMapping("/setDefault/{invoiceID}")
    public String setDefault(Map<String, Object> map,@PathVariable("invoiceID")String invoiceID,HttpSession httpSession) {
        logger.info("设置默认发票");
        User user = new User();
        try {
        	user = Permission.check(httpSession, UserRole.BUY,UserRole.CLIENT);
		} catch (UserNotLoginException e) {
			return "redirect:/passport/login";
		} catch (NoPermissionException e){
			return "redirect:/passport/login";
		}
        Invoice invoice = new Invoice();
        invoice.setInvoiceID(invoiceID);
        invoiceService.setDefault(invoice);
        invoiceService.setOtherDefault(invoice);
        return "redirect:/management/invoice";
    }
}
