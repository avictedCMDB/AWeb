package com.avic.management.controllers;

import java.io.File;
import java.io.IOException;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FileUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

import com.avic.common.constants.UserRole;
import com.avic.common.exceptions.NoPermissionException;
import com.avic.common.exceptions.UserNotLoginException;
import com.avic.common.utils.Permission;
import com.avic.management.models.VatSpecial;
import com.avic.management.services.CommonService;
import com.avic.management.services.VatSpecialService;
import com.avic.passport.models.User;

@Controller
@RequestMapping("/vat")
public class VatSpecialController {
    protected static final Log logger = LogFactory.getLog(VatSpecialController.class);
    private final String downLoadFileName = "test.xls";
    private final String DOWNLOADPATH = "download";
    @Autowired
    VatSpecialService vatSpecialService;
    @Autowired
    CommonService commonService;
    
    private VatSpecial vatSpecial;
    
    @RequestMapping("")
    public String index(HttpServletRequest req,Map<String, Object> map,HttpSession httpSession) {
        logger.info("增票管理");
        User user = new User();
        try {
        	user = Permission.check(httpSession, UserRole.BUY,UserRole.CLIENT);
		} catch (UserNotLoginException e) {
			return "redirect:/passport/login";
		} catch (NoPermissionException e){
			return "redirect:/passport/login";
		}
		//获取采购员赠票信息
		vatSpecial = new VatSpecial();
		vatSpecial.setUserID(user.getUserId());
		vatSpecial = vatSpecialService.queryVatSpecial(vatSpecial);
        map.put("vatSpecial", vatSpecial);
        return "vatSpecial/management_vat_special";
    }
    
    @RequestMapping("/add")
    public String addVat(@ModelAttribute("vatSpecial")VatSpecial vatSpecial,HttpSession httpSession) {
        logger.info("添加增票信息");
        User user = new User();
        try {
        	user = Permission.check(httpSession, UserRole.BUY);
		} catch (UserNotLoginException e) {
			return "redirect:/passport/login";
		} catch (NoPermissionException e){
			return "redirect:/passport/login";
		}
        String vatID = commonService.queryIndex();//获取增票id
        vatSpecial.setId(vatID);
        vatSpecial.setUserID(user.getUserId());
        vatSpecialService.addVat(vatSpecial);
        return "redirect:/management/vat";
    }
    
    @RequestMapping("/update")
    public String updateVat(@ModelAttribute("vatSpecial")VatSpecial vatSpecial,HttpSession httpSession) {
        logger.info("修改增票信息");
        @SuppressWarnings("unused")
		User user = new User();
        try {
        	user = Permission.check(httpSession, UserRole.BUY);
		} catch (UserNotLoginException e) {
			return "redirect:/passport/login";
		} catch (NoPermissionException e){
			return "redirect:/passport/login";
		}
		vatSpecialService.updateVat(vatSpecial);
        return "redirect:/management/vat";
    }
    
    @RequestMapping("/del/{id}")
    public String deleteVat(Map<String, Object> map,@PathVariable("id")String id,HttpSession httpSession) {
        logger.info("删除增票信息");
        @SuppressWarnings("unused")
		User user = new User();
        try {
        	user = Permission.check(httpSession, UserRole.BUY);
		} catch (UserNotLoginException e) {
			return "redirect:/passport/login";
		} catch (NoPermissionException e){
			return "redirect:/passport/login";
		}
		VatSpecial vatSpecial = new VatSpecial();
		vatSpecial.setId(id);
		vatSpecialService.deleteVat(vatSpecial);
        return "redirect:/management/vat";
    }
    
    //下载文件
    @RequestMapping("download")    
    public ResponseEntity<byte[]> download(HttpServletRequest request) throws IOException {    
        String path = request.getSession().getServletContext().getRealPath("/")+DOWNLOADPATH+File.separator+downLoadFileName;  
        File file=new File(path);  
        HttpHeaders headers = new HttpHeaders();    
        String fileName=new String(downLoadFileName.getBytes("UTF-8"),"iso-8859-1");//为了解决中文名称乱码问题  
        headers.setContentDispositionFormData("attachment", fileName);   
        headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);   
        return new ResponseEntity<byte[]>(FileUtils.readFileToByteArray(file),headers, HttpStatus.CREATED);    
    }    
}
