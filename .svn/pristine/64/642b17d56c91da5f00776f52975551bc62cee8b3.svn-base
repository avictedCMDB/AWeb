package com.avic.market.controllers;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.avic.alipay.util.AlipayNotify;
import com.avic.common.constants.UserRole;
import com.avic.common.exceptions.NoPermissionException;
import com.avic.common.exceptions.UserNotLoginException;
import com.avic.common.utils.Permission;
import com.avic.management.models.Audit;
import com.avic.management.models.AuditImageInfo;
import com.avic.management.models.AuditOrder;
import com.avic.management.models.Invoice;
import com.avic.management.models.OrderSnapshot;
import com.avic.management.models.ProductCompare;
import com.avic.management.services.AuditService;
import com.avic.management.services.CommonService;
import com.avic.management.services.InvoiceService;
import com.avic.management.services.ProductCompareService;
import com.avic.passport.models.User;

@Controller
@RequestMapping("/alipay")
@Transactional
public class AlipayController {
    protected static final Log logger = LogFactory.getLog(AlipayController.class);
    
    @RequestMapping("/alipayNotify")
    public String alipayNotify(Map<String, Object> map,HttpServletRequest req,HttpServletResponse resp,HttpSession httpSession) {
    	//获取支付宝POST过来反馈信息
    	Map<String,String> params = new HashMap<String,String>();
    	Map requestParams = req.getParameterMap();
    	for (Iterator iter = requestParams.keySet().iterator(); iter.hasNext();) {
    		String name = (String) iter.next();
    		String[] values = (String[]) requestParams.get(name);
    		String valueStr = "";
    		for (int i = 0; i < values.length; i++) {
    			valueStr = (i == values.length - 1) ? valueStr + values[i]
    					: valueStr + values[i] + ",";
    		}
    		//乱码解决，这段代码在出现乱码时使用。如果mysign和sign不相等也可以使用这段代码转化
    		//valueStr = new String(valueStr.getBytes("ISO-8859-1"), "gbk");
    		params.put(name, valueStr);
    	}
    	
    	//获取支付宝的通知返回参数，可参考技术文档中页面跳转同步通知参数列表(以下仅供参考)//
    	//商户订单号
    	String out_trade_no="";
    	String trade_no = "";
    	String trade_status = "";
    	try {
			out_trade_no = new String(req.getParameter("out_trade_no").getBytes("ISO-8859-1"),"GBK");
			//支付宝交易号
	    	trade_no = new String(req.getParameter("trade_no").getBytes("ISO-8859-1"),"GBK");
	    	//交易状态
	    	trade_status = new String(req.getParameter("trade_status").getBytes("ISO-8859-1"),"GBK");
    	} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}

    	if(AlipayNotify.verify(params)){//验证成功
    		//请在这里加上商户的业务逻辑程序代码

    		//――请根据您的业务逻辑来编写程序（以下代码仅作参考）――
    		if(trade_status.equals("TRADE_FINISHED")){
    			//判断该笔订单是否在商户网站中已经做过处理
    				//如果没有做过处理，根据订单号（out_trade_no）在商户网站的订单系统中查到该笔订单的详细，并执行商户的业务程序
    				//请务必判断请求时的total_fee、seller_id与通知时获取的total_fee、seller_id为一致的
    				//如果有做过处理，不执行商户的业务程序
    				
    			//注意：
    			//退款日期超过可退款期限后（如三个月可退款），支付宝系统发送该交易状态通知
    		} else if (trade_status.equals("TRADE_SUCCESS")){
    			//判断该笔订单是否在商户网站中已经做过处理
    				//如果没有做过处理，根据订单号（out_trade_no）在商户网站的订单系统中查到该笔订单的详细，并执行商户的业务程序
    				//请务必判断请求时的total_fee、seller_id与通知时获取的total_fee、seller_id为一致的
    				//如果有做过处理，不执行商户的业务程序
    				
    		}

    		//――请根据您的业务逻辑来编写程序（以上代码仅作参考）――
    		try {
				resp.getWriter().write("success");
			} catch (IOException e) {
				e.printStackTrace();
			}	
			return "finance/pay_success";	//请不要修改或删除

    		//////////////////////////////////////////////////////////////////////////////////////////
    	}else{//验证失败
    		return "finance/pay_fail";
    	}
    }
}
